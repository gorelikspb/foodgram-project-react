{
	"id": "e66376f5-7676-4166-b261-aac49385b404",
	"name": "diploma",
	"timestamp": "2023-10-13T07:44:18.569Z",
	"collection_id": "20052507-1d6501c8-0aaf-4030-97ac-ea5dfd08049b",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 105,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2023-10-13T07:43:52.918Z",
	"totalFail": 102,
	"results": [
		{
			"id": "b907062c-a783-4088-9354-884c36052248",
			"name": "create_first_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 449,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				449
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "fe4784c6-83fa-4f8e-89b9-f49b44f8ce3e",
			"name": "create_second_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 421,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				421
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "1e82045b-7e32-4944-96cb-e6c9c16617c4",
			"name": "create_third_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 431,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				431
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "b7837ada-26cb-47b3-b330-84fd9537fcf6",
			"name": "get_token_for_first_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 447,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				447
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "e95045be-f8be-4c2b-aefd-1ae33d6f5273",
			"name": "get_token_for_second_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 435,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				435
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "07c8dfd4-558f-46a1-945a-b7f43837e485",
			"name": "user_registration_without_email",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "575e57ae-c6c3-4b27-9cbd-5afab755ca7f",
			"name": "user_registration_without_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9739f555-546c-4eff-b43b-b65dddacaf21",
			"name": "user_registration_without_first_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "3622f434-3a07-4117-9d4a-465a5cabbd12",
			"name": "user_registration_without_last_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "74dbcdc6-7b04-4218-aa51-4bc90eae3f88",
			"name": "user_registration_without_password_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "050e60e4-9d03-438b-8260-a7a221670e8f",
			"name": "user_registration_too_long_email",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6541c803-358e-4aed-a4e0-eb3c2c219914",
			"name": "user_registration_too_long_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 415,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				415
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "d6373b7d-c7ee-425b-997e-c98dd7e6e4a2",
			"name": "user_registration_too_long_first_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9d0b48d0-57fb-40f1-ad64-59be5de9887d",
			"name": "user_registration_too_long_last_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c17bd9d7-0692-4f0a-9f73-89925873af74",
			"name": "user_registration_with_invalid_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 413,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				413
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "8df71373-a7b5-434a-9f69-c0c9a13a9b4d",
			"name": "user_registration_email_in_use",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 17,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "0843aa72-7db8-4166-a4c2-b541a12f1f8b",
			"name": "user_registration_username_in_use",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "bed5c380-3019-49ba-aa1c-ca6b6ae9f17a",
			"name": "get_token_username_and_email_mismatch",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b4f6440a-e379-40fd-b2cf-bcc3ac0781b5",
			"name": "get_token_no_email",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "8b615fae-88b9-4479-8079-48d29ac437e4",
			"name": "get_token_no_password",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5ee877da-8839-4080-91f9-e1adbfb278e6",
			"name": "logout // User",
			"url": "http://127.0.0.1:8000/api/auth/token/logout/",
			"time": 22,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "3f62dfdb-60c6-4f69-b300-929e2c37035d",
			"name": "get_token",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 432,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				432
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "55f2a34a-e73e-4b77-a25d-4de9f2478cdd",
			"name": "get_user_list // No Auth",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 18,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "17de4eba-2703-4509-b20e-1b31449a2fdf",
			"name": "get_user_list// User",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 22,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "027ff009-7bdd-416f-ab11-b4ff749407f5",
			"name": "get_user_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/?limit=1",
			"time": 15,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
				}
			]
		},
		{
			"id": "cb5d4136-f7f4-4d0f-9675-b4f65020ec8e",
			"name": "get_profile // No Auth",
			"url": "http://127.0.0.1:8000/api/users/2/",
			"time": 7,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "59e29b62-e2d9-4f61-b091-834083044bcc",
			"name": "get_profile // User",
			"url": "http://127.0.0.1:8000/api/users/2/",
			"time": 13,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "51cabf0b-f7a6-43e9-b862-690e08b3a2a6",
			"name": "users_me // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 12,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `is_subscribed` в ответе должно иметь значение `false`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `is_subscribed` в ответе должно иметь значение `false`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `is_subscribed` в ответе должно иметь значение `false`": true
				}
			]
		},
		{
			"id": "bcac5d98-fde5-4c12-8a1a-30b77584bc8b",
			"name": "reset_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 840,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				840
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "516cbdc4-d482-4bca-a6d0-c65fa2bb6276",
			"name": "get_token_with_new_password",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 401,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				401
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "f1e488d0-ba3c-4c25-8df6-13617bfda081",
			"name": "roll_back_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 786,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				786
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "2aa3b8ae-c1c6-47bb-8d8f-7a7495a2d9b7",
			"name": "users_me // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 6,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "081f8a1f-9ddf-4d44-bca3-65fc6db7efca",
			"name": "get_non_existing_profile // User",
			"url": "http://127.0.0.1:8000/api/users/9876/",
			"time": 13,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "42aad495-8b72-4c4c-beee-7520e3845312",
			"name": "reset_password_wrong_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 418,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				418
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a932057e-605b-4fab-a3bb-59b4c7f213d4",
			"name": "get_tag_list // No Auth",
			"url": "http://127.0.0.1:8000/api/tags/",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "284b543e-abdb-4025-8fef-80a8899fefbf",
			"name": "get_tag_list // User",
			"url": "http://127.0.0.1:8000/api/tags/",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "71f6111e-d9f2-4230-a384-8edde9af7f1d",
			"name": "get_tag_detail // No Auth",
			"url": "http://127.0.0.1:8000/api/tags/1/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "031c1b2e-ced8-4975-a5f1-9099ab1ce7c9",
			"name": "get_tag_detail // User",
			"url": "http://127.0.0.1:8000/api/tags/1/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "31493a5b-113d-4bbe-a553-cd68c65a6c7c",
			"name": "get_non_existing_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/9876/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "aefe02e9-b8fa-4009-bc19-53376b666f65",
			"name": "create_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/",
			"time": 9,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 405": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": false
				}
			]
		},
		{
			"id": "830fa81c-7ee9-4e5d-9963-2d23723f135a",
			"name": "put_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/1/",
			"time": 11,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 405": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": false
				}
			]
		},
		{
			"id": "ea6bba67-626f-415b-8b96-049644b65496",
			"name": "patch_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/1/",
			"time": 11,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 405": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": false
				}
			]
		},
		{
			"id": "0ac535a1-da41-45c9-aedf-b10e0aa35918",
			"name": "delete_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/1/",
			"time": 9,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 405": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": false
				}
			]
		},
		{
			"id": "c119ba44-80c8-429d-936c-0ca2a9a3a6e5",
			"name": "get_ingredients_list // No Auth",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "3e84c736-e7ba-4a7a-8eeb-0f165e229b75",
			"name": "get_ingredients_list // User",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "ffe42f38-b0d5-41c3-b33d-f55dd532e9df",
			"name": "get_ingredients_list_with_name_filter // User",
			"url": "http://127.0.0.1:8000/api/ingredients/?name={{ingredientNameFirstLatter}}",
			"time": 14,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "7dd81735-63a4-41cc-9d12-ace918a13151",
			"name": "get_ingredient // No Auth",
			"url": "http://127.0.0.1:8000/api/ingredients/1/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "b0800a2a-4d84-4f58-869e-656d0e0083ff",
			"name": "get_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/1/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "24b28b2d-d216-47cb-b201-e5502d66fe75",
			"name": "get_non_existing_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/9876/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "4b8547ef-27c8-4c94-be80-cc09caefb7e4",
			"name": "create_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 11,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 405": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": false
				}
			]
		},
		{
			"id": "93663892-4687-4445-ae97-0fea43f354d1",
			"name": "put_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/1/",
			"time": 9,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 405": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": false
				}
			]
		},
		{
			"id": "5b917eec-63ed-41ee-9869-bd41e7d38318",
			"name": "patch_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/1/",
			"time": 10,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 405": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": false
				}
			]
		},
		{
			"id": "299187f6-1c7c-4fb7-ac63-b1354c0ec832",
			"name": "delete_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/1/",
			"time": 10,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 405": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": false
				}
			]
		},
		{
			"id": "736e33dd-b451-49bc-bd51-e02cd0e554b0",
			"name": "create_first_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 323,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				323
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "8c58d46a-5588-445e-917f-c6292f11cbb4",
			"name": "create_second_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 14,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "ea9c0770-ecdc-4250-90cb-e586e819488f",
			"name": "create_third_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "0e174eca-4a46-45f9-856b-fe512bfdcb9a",
			"name": "create_fourth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "450c0fa5-52f7-4b89-ba61-a97f53ac11d0",
			"name": "create_fifth_recipe // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 24,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "e1789577-34ed-4ef8-8923-df3152bf42c6",
			"name": "get_recipes_list // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 12,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "7c248c54-9be8-4bb7-a690-96d26b164bf7",
			"name": "get_recipes_list // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 14,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "f21355f3-4795-488e-be26-b29f562e2195",
			"name": "get_recipes_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?limit=2",
			"time": 13,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
				}
			]
		},
		{
			"id": "27758f8a-592c-4c30-b622-6310402d1e69",
			"name": "get_recipes_list_with_author_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?author=2",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
				}
			]
		},
		{
			"id": "1e845d7b-ddc9-40e4-b4cc-3e717d22a5ec",
			"name": "get_recipes_list_with_two_tags_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?tags={{secondTagSlug}}&tags={{thirdTagSlug}}",
			"time": 13,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтрации рецептов через параметр запроса `tags`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтрации рецептов через параметр запроса `tags`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтрации рецептов через параметр запроса `tags`": false
				}
			]
		},
		{
			"id": "c8950938-603a-4235-83c5-48973a681dc8",
			"name": "get_recipe_detail // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/8/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "7fe29bb0-0feb-4639-8f36-0acc744f1002",
			"name": "get_recipe_detail // User",
			"url": "http://127.0.0.1:8000/api/recipes/8/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "422c5e8f-8044-41ad-974b-69b88f0be81b",
			"name": "update_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/8/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа соответствует ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа соответствует ожидаемой": false
				}
			]
		},
		{
			"id": "05b908b9-5418-43bb-ae98-201c8e59e160",
			"name": "create_recipe_without_ingredients // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "3e02e551-c3fd-4ad2-8774-92f861e241f4",
			"name": "create_recipe_empty_ingredients_fields // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "d3d8acb9-37e3-4813-bc0c-85e3b66885ac",
			"name": "create_recipe_with_non_existing_ingredient // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "1ae3f9a4-4388-4cb9-87a9-bd83fea7526b",
			"name": "create_recipe_with_ingredient_amount_less_than_one // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 13,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "4a97ba4a-201b-4e20-97cb-2712d4a64840",
			"name": "create_recipe_with_repetitive_ingredients // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 13,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "9ea2850e-75a3-4bd6-9eba-34c374d30847",
			"name": "create_recipe_without_tags_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "668ae385-4a76-4e46-944f-a71252ae3551",
			"name": "create_recipe_empty_tags // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 17,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "2424d936-03fb-48bc-bae9-aa3dc046c7bd",
			"name": "create_recipe_with_repetitive_tags // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 16,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				16
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "3b78af94-12aa-481a-80d4-3df438eb2bd4",
			"name": "create_recipe_with_non_existing_tag // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "b0681021-e7b9-472e-a25d-de7caa224ee5",
			"name": "create_recipe_without_image_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "23e0207c-ae75-4704-84c8-b3bdb091ee4a",
			"name": "create_recipe_empty_image // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "27c0700f-0c7e-4afe-93be-1ea389a00c7c",
			"name": "create_recipe_without_name_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "d08c7dad-cc23-4bc4-903a-b4e2ac008169",
			"name": "create_recipe_empty_name // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "31a58851-7092-456c-a312-df7a94667766",
			"name": "create_recipe_too_long_name // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "ce03d6dd-dc8c-4151-8b30-a740fb097ec8",
			"name": "create_recipe_without_text_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 14,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "af2d1419-40c0-441a-9fd6-90f7d6b8c62a",
			"name": "create_recipe_empty_text // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "108225d1-73a8-4a96-90e5-ba5567a10596",
			"name": "create_recipe_without_cooking_time_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f528b0c1-9d72-46de-968d-542af994c8e5",
			"name": "create_recipe_empty_string_as_cooking_time // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "05ec818a-15c3-4ec0-858a-141da3454b8e",
			"name": "create_recipe_cooking_time_less_than_one // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "39a0028c-a241-4754-b91e-3648139dcfd8",
			"name": "create_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 13,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "9f3304d8-bddc-4185-affe-05ba3ac8e818",
			"name": "update_recipe_not_author // User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "1d1e91e4-a503-4bf5-a6c7-efd3f0bb114c",
			"name": "update_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "096b9b44-5813-4961-8fb5-2b5e6d8a7ced",
			"name": "update_recipe_without_ingredients_field // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "2baa137a-2eae-4ebe-9eb7-c45d86a5212e",
			"name": "update_recipe_empty_ingredients // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "70df4a22-d4cd-4558-a0c8-3e71fe275bcd",
			"name": "update_recipe_with_non_existing_ingredient // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "7328e6eb-fa0f-4f09-ac23-607003d92365",
			"name": "update_recipe_with_ingredient_amount_less_than_one // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "554b0764-a7eb-426f-b0c7-301ad2b2be64",
			"name": "update_recipe_with_repetitive_ingredients // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "a1402ebf-2389-4dd7-be62-61ddeb153fdb",
			"name": "update_recipe_without_tags_field // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "c042ccab-d56e-4afa-896f-7a108658803d",
			"name": "update_recipe_empty_tags // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 13,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "2d5e80b7-3955-4d82-a0a5-8af6fd8f32ae",
			"name": "update_recipe_with_non_existing_tag // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "598089da-815d-4c0d-914f-7635056390a6",
			"name": "update_recipe_repetitive_tags  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "c5daea63-ab5c-4870-8145-2108769c1940",
			"name": "update_recipe_empty_image  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 13,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "8bff130e-4c17-4d45-af9b-7acaa0542823",
			"name": "update_recipe_empty_name  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "fe1a2067-b09a-486e-9b20-59edfc74fdc6",
			"name": "update_recipe_too_long_name  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "25330d8e-82e8-4134-9cf1-66d657131d00",
			"name": "update_recipe_empty_text  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "f54046f2-0a9b-4b52-a6cf-33a6afe1200d",
			"name": "update_recipe_empty_string_as_cooking_time  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 19,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "b27b694f-a074-461c-868e-66afb8390da0",
			"name": "update_recipe_empty_cooking_time_less_than_one  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "356efd9b-bd08-4de6-916d-baf2376482b4",
			"name": "update_none_existing_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/",
			"time": 17,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "9efc960a-7a69-4447-a29f-12913e82ea48",
			"name": "create_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/4/subscribe/",
			"time": 10,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "f1e5eeec-a70f-4303-94bc-b24df5a08736",
			"name": "create_subscription_with_recipes_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/?recipes_limit=2",
			"time": 11,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": false
				}
			]
		},
		{
			"id": "df1db30a-8ee3-4d71-9e33-713b7a4732f4",
			"name": "get_subscription_list // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/",
			"time": 14,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "8e8b0c31-70a4-4d23-bf5b-fae2389caa03",
			"name": "get_subscription_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/?limit=1",
			"time": 12,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": false
				}
			]
		},
		{
			"id": "9fb6bec2-2625-4be4-9d45-f8456c82edcc",
			"name": "get_subscription_list_with_recipes_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/?recipes_limit=2",
			"time": 13,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "5cb4f1ff-258b-4032-8a59-75f4dde1564c",
			"name": "create_subscription // No Auth",
			"url": "http://127.0.0.1:8000/api/users/4/subscribe/",
			"time": 6,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "818a02ba-cb9f-4972-a9d0-78afab8e69e5",
			"name": "create_duplicated_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/4/subscribe/",
			"time": 10,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "9b3470b7-ec30-4086-b632-1c70b40aac9b",
			"name": "create_self_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/2/subscribe/",
			"time": 10,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "8f5f9947-5f5a-467d-841a-5d0fa5bd22f4",
			"name": "create_subscription_to_non_existing_author // User",
			"url": "http://127.0.0.1:8000/api/users/9876/subscribe/",
			"time": 11,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 404": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": false
				}
			]
		},
		{
			"id": "9f183972-3d4b-4f71-8fbb-962a89bf6b85",
			"name": "add_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/8/shopping_cart/",
			"time": 11,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "fdf4eea1-1893-4292-adc0-b38b2270fb36",
			"name": "download_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/download_shopping_cart/",
			"time": 103,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				103
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true
				}
			]
		},
		{
			"id": "3dbd26d0-0b66-492a-96c9-a5d8ff36772d",
			"name": "add_to_shopping_cart // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/8/shopping_cart/",
			"time": 7,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "dc290be5-e4d6-4aec-ae5e-09972f2e4d00",
			"name": "add_again_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/8/shopping_cart/",
			"time": 10,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "a45ad4b0-b0d5-4803-b250-bfa810f96aa6",
			"name": "add_non_existing_recipe_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/shopping_cart/",
			"time": 9,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "b2e838e4-aa51-4417-aebf-5c2b0970154d",
			"name": "add_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/8/favorite/",
			"time": 9,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "73eabe11-503b-486d-b2ef-eeae68a0dd71",
			"name": "add_to_favorite // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/8/favorite/",
			"time": 7,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "36cf1158-78d8-4659-bf2e-a4290cdc1470",
			"name": "add_again_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/8/favorite/",
			"time": 9,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "f0a0cb90-4b3c-4fe0-863b-b9c4bc9280ff",
			"name": "add_non_existing_recipe_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/favorite/",
			"time": 9,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "f26b114d-4b4d-4427-af3f-809f891df33d",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?is_in_shopping_cart=1",
			"time": 14,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
				}
			]
		},
		{
			"id": "a1b98ae7-9a81-4b1b-bc6c-83a7942fc79c",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/?is_in_shopping_cart=1",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "18ce96fe-e644-48e0-a2a7-53f20b5d158d",
			"name": "get_recipes_list_with_is_favorited_cart_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?is_favorited=1",
			"time": 13,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
				}
			]
		},
		{
			"id": "eede021a-de0f-4c0f-ab7e-5134ab310403",
			"name": "get_recipes_list_with_is_favorited_cart_param // User Copy",
			"url": "http://localhost:8000/api/recipes/5/?is_favorited=1",
			"time": 17,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
				}
			]
		},
		{
			"id": "356840e0-14d0-4658-aacb-7691f807d6e8",
			"name": "get_recipes_list_with_is_favorited_cart_param // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/?is_favorited=1",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "13abf893-63fb-4f89-94a8-edcb49943126",
			"name": "delete_subscription // No Auth",
			"url": "http://127.0.0.1:8000/api/users/4/subscribe/",
			"time": 8,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "64de3f55-57be-4e73-b94c-3eef769946fb",
			"name": "delete_non_existing_subscription // Second User",
			"url": "http://127.0.0.1:8000/api/users/4/subscribe/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "bb6b6470-8b31-444d-b8fe-b37c3917f230",
			"name": "delete_subscription_with_non_existing_author_in_url // Second User",
			"url": "http://127.0.0.1:8000/api/users/9876/subscribe/",
			"time": 13,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "96045b8c-1d2f-4cfb-8696-14918936a1c0",
			"name": "delete_first_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/4/subscribe/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "0debc5fa-c762-4b0f-9fc9-8cedb7e0102b",
			"name": "delete_second_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "e32ff941-b6fa-4d0f-bbdd-775decfff761",
			"name": "remove_from_shopping_cart // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/8/shopping_cart/",
			"time": 8,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "b2f72371-f573-42d1-895d-85de68e8f9fe",
			"name": "remove_not_added_from_shopping_cart // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/8/shopping_cart/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "4e260747-df06-4760-a8a0-a9010d00316c",
			"name": "remove_non_existing_recipe_from_shopping_cart // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/shopping_cart/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 404": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": false
				}
			]
		},
		{
			"id": "966ab6e8-a9ab-4395-914a-46cc76aa993c",
			"name": "remove_from_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/8/shopping_cart/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "20a5a258-2619-4529-ae6b-c93ec76be466",
			"name": "remove_from_favorite // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{recipeId}}/favorite/",
			"time": 7,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "1ba5e5da-bea2-40ab-9fe8-a2d3ce8d2314",
			"name": "remove_not_added_from_favorite // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/8/favorite/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "8c3f27ca-60f9-419d-814d-fdb5b7335f55",
			"name": "remove_non_existing_recipe_from_favorite // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/favorite/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 404": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": false
				}
			]
		},
		{
			"id": "d52ccf5a-abbc-4a58-b099-3bffcb2543a9",
			"name": "remove_from_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/8/favorite/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "0ee9202c-aa81-4b4e-92a2-20cf243db8e8",
			"name": "delete_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/3/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "1d471b40-8d95-4912-b4f3-131ac470b604",
			"name": "delete_recipe_not_by_author // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/3/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "21f7128b-e186-4551-85c3-c8d068f9098d",
			"name": "delete_non_existing_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "c025e5d1-c587-4173-bd18-3c802efbba8b",
			"name": "delete_first_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/8/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "e4e7286c-ad53-4dbe-b0d9-5fdfcf4cde9d",
			"name": "delete_second_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/1/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "802b911f-aaa1-497c-81a5-5376bfd24cce",
			"name": "delete_third_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{thirdRecipeId}}/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "2ceb55e6-83e6-4a7b-82b2-0ef655ed5aae",
			"name": "delete_fourth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fourthRecipeId}}/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "d026248c-c182-4ea4-b61c-c650dbaf043b",
			"name": "delete_fifth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/3/",
			"time": 13,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		}
	],
	"count": 1,
	"totalTime": 7866,
	"collection": {
		"requests": [
			{
				"id": "b907062c-a783-4088-9354-884c36052248",
				"method": "POST"
			},
			{
				"id": "fe4784c6-83fa-4f8e-89b9-f49b44f8ce3e",
				"method": "POST"
			},
			{
				"id": "1e82045b-7e32-4944-96cb-e6c9c16617c4",
				"method": "POST"
			},
			{
				"id": "b7837ada-26cb-47b3-b330-84fd9537fcf6",
				"method": "POST"
			},
			{
				"id": "e95045be-f8be-4c2b-aefd-1ae33d6f5273",
				"method": "POST"
			},
			{
				"id": "07c8dfd4-558f-46a1-945a-b7f43837e485",
				"method": "POST"
			},
			{
				"id": "575e57ae-c6c3-4b27-9cbd-5afab755ca7f",
				"method": "POST"
			},
			{
				"id": "9739f555-546c-4eff-b43b-b65dddacaf21",
				"method": "POST"
			},
			{
				"id": "3622f434-3a07-4117-9d4a-465a5cabbd12",
				"method": "POST"
			},
			{
				"id": "74dbcdc6-7b04-4218-aa51-4bc90eae3f88",
				"method": "POST"
			},
			{
				"id": "050e60e4-9d03-438b-8260-a7a221670e8f",
				"method": "POST"
			},
			{
				"id": "6541c803-358e-4aed-a4e0-eb3c2c219914",
				"method": "POST"
			},
			{
				"id": "d6373b7d-c7ee-425b-997e-c98dd7e6e4a2",
				"method": "POST"
			},
			{
				"id": "9d0b48d0-57fb-40f1-ad64-59be5de9887d",
				"method": "POST"
			},
			{
				"id": "c17bd9d7-0692-4f0a-9f73-89925873af74",
				"method": "POST"
			},
			{
				"id": "8df71373-a7b5-434a-9f69-c0c9a13a9b4d",
				"method": "POST"
			},
			{
				"id": "0843aa72-7db8-4166-a4c2-b541a12f1f8b",
				"method": "POST"
			},
			{
				"id": "bed5c380-3019-49ba-aa1c-ca6b6ae9f17a",
				"method": "POST"
			},
			{
				"id": "b4f6440a-e379-40fd-b2cf-bcc3ac0781b5",
				"method": "POST"
			},
			{
				"id": "8b615fae-88b9-4479-8079-48d29ac437e4",
				"method": "POST"
			},
			{
				"id": "5ee877da-8839-4080-91f9-e1adbfb278e6",
				"method": "POST"
			},
			{
				"id": "3f62dfdb-60c6-4f69-b300-929e2c37035d",
				"method": "POST"
			},
			{
				"id": "55f2a34a-e73e-4b77-a25d-4de9f2478cdd",
				"method": "GET"
			},
			{
				"id": "17de4eba-2703-4509-b20e-1b31449a2fdf",
				"method": "GET"
			},
			{
				"id": "027ff009-7bdd-416f-ab11-b4ff749407f5",
				"method": "GET"
			},
			{
				"id": "cb5d4136-f7f4-4d0f-9675-b4f65020ec8e",
				"method": "GET"
			},
			{
				"id": "59e29b62-e2d9-4f61-b091-834083044bcc",
				"method": "GET"
			},
			{
				"id": "51cabf0b-f7a6-43e9-b862-690e08b3a2a6",
				"method": "GET"
			},
			{
				"id": "bcac5d98-fde5-4c12-8a1a-30b77584bc8b",
				"method": "POST"
			},
			{
				"id": "516cbdc4-d482-4bca-a6d0-c65fa2bb6276",
				"method": "POST"
			},
			{
				"id": "f1e488d0-ba3c-4c25-8df6-13617bfda081",
				"method": "POST"
			},
			{
				"id": "2aa3b8ae-c1c6-47bb-8d8f-7a7495a2d9b7",
				"method": "GET"
			},
			{
				"id": "081f8a1f-9ddf-4d44-bca3-65fc6db7efca",
				"method": "GET"
			},
			{
				"id": "42aad495-8b72-4c4c-beee-7520e3845312",
				"method": "POST"
			},
			{
				"id": "a932057e-605b-4fab-a3bb-59b4c7f213d4",
				"method": "GET"
			},
			{
				"id": "284b543e-abdb-4025-8fef-80a8899fefbf",
				"method": "GET"
			},
			{
				"id": "71f6111e-d9f2-4230-a384-8edde9af7f1d",
				"method": "GET"
			},
			{
				"id": "031c1b2e-ced8-4975-a5f1-9099ab1ce7c9",
				"method": "GET"
			},
			{
				"id": "31493a5b-113d-4bbe-a553-cd68c65a6c7c",
				"method": "GET"
			},
			{
				"id": "aefe02e9-b8fa-4009-bc19-53376b666f65",
				"method": "POST"
			},
			{
				"id": "830fa81c-7ee9-4e5d-9963-2d23723f135a",
				"method": "PUT"
			},
			{
				"id": "ea6bba67-626f-415b-8b96-049644b65496",
				"method": "PATCH"
			},
			{
				"id": "0ac535a1-da41-45c9-aedf-b10e0aa35918",
				"method": "DELETE"
			},
			{
				"id": "c119ba44-80c8-429d-936c-0ca2a9a3a6e5",
				"method": "GET"
			},
			{
				"id": "3e84c736-e7ba-4a7a-8eeb-0f165e229b75",
				"method": "GET"
			},
			{
				"id": "ffe42f38-b0d5-41c3-b33d-f55dd532e9df",
				"method": "GET"
			},
			{
				"id": "7dd81735-63a4-41cc-9d12-ace918a13151",
				"method": "GET"
			},
			{
				"id": "b0800a2a-4d84-4f58-869e-656d0e0083ff",
				"method": "GET"
			},
			{
				"id": "24b28b2d-d216-47cb-b201-e5502d66fe75",
				"method": "GET"
			},
			{
				"id": "4b8547ef-27c8-4c94-be80-cc09caefb7e4",
				"method": "POST"
			},
			{
				"id": "93663892-4687-4445-ae97-0fea43f354d1",
				"method": "PUT"
			},
			{
				"id": "5b917eec-63ed-41ee-9869-bd41e7d38318",
				"method": "PATCH"
			},
			{
				"id": "299187f6-1c7c-4fb7-ac63-b1354c0ec832",
				"method": "DELETE"
			},
			{
				"id": "736e33dd-b451-49bc-bd51-e02cd0e554b0",
				"method": "POST"
			},
			{
				"id": "8c58d46a-5588-445e-917f-c6292f11cbb4",
				"method": "POST"
			},
			{
				"id": "ea9c0770-ecdc-4250-90cb-e586e819488f",
				"method": "POST"
			},
			{
				"id": "0e174eca-4a46-45f9-856b-fe512bfdcb9a",
				"method": "POST"
			},
			{
				"id": "450c0fa5-52f7-4b89-ba61-a97f53ac11d0",
				"method": "POST"
			},
			{
				"id": "e1789577-34ed-4ef8-8923-df3152bf42c6",
				"method": "GET"
			},
			{
				"id": "7c248c54-9be8-4bb7-a690-96d26b164bf7",
				"method": "GET"
			},
			{
				"id": "f21355f3-4795-488e-be26-b29f562e2195",
				"method": "GET"
			},
			{
				"id": "27758f8a-592c-4c30-b622-6310402d1e69",
				"method": "GET"
			},
			{
				"id": "1e845d7b-ddc9-40e4-b4cc-3e717d22a5ec",
				"method": "GET"
			},
			{
				"id": "c8950938-603a-4235-83c5-48973a681dc8",
				"method": "GET"
			},
			{
				"id": "7fe29bb0-0feb-4639-8f36-0acc744f1002",
				"method": "GET"
			},
			{
				"id": "422c5e8f-8044-41ad-974b-69b88f0be81b",
				"method": "PATCH"
			},
			{
				"id": "05b908b9-5418-43bb-ae98-201c8e59e160",
				"method": "POST"
			},
			{
				"id": "3e02e551-c3fd-4ad2-8774-92f861e241f4",
				"method": "POST"
			},
			{
				"id": "d3d8acb9-37e3-4813-bc0c-85e3b66885ac",
				"method": "POST"
			},
			{
				"id": "1ae3f9a4-4388-4cb9-87a9-bd83fea7526b",
				"method": "POST"
			},
			{
				"id": "4a97ba4a-201b-4e20-97cb-2712d4a64840",
				"method": "POST"
			},
			{
				"id": "9ea2850e-75a3-4bd6-9eba-34c374d30847",
				"method": "POST"
			},
			{
				"id": "668ae385-4a76-4e46-944f-a71252ae3551",
				"method": "POST"
			},
			{
				"id": "2424d936-03fb-48bc-bae9-aa3dc046c7bd",
				"method": "POST"
			},
			{
				"id": "3b78af94-12aa-481a-80d4-3df438eb2bd4",
				"method": "POST"
			},
			{
				"id": "b0681021-e7b9-472e-a25d-de7caa224ee5",
				"method": "POST"
			},
			{
				"id": "23e0207c-ae75-4704-84c8-b3bdb091ee4a",
				"method": "POST"
			},
			{
				"id": "27c0700f-0c7e-4afe-93be-1ea389a00c7c",
				"method": "POST"
			},
			{
				"id": "d08c7dad-cc23-4bc4-903a-b4e2ac008169",
				"method": "POST"
			},
			{
				"id": "31a58851-7092-456c-a312-df7a94667766",
				"method": "POST"
			},
			{
				"id": "ce03d6dd-dc8c-4151-8b30-a740fb097ec8",
				"method": "POST"
			},
			{
				"id": "af2d1419-40c0-441a-9fd6-90f7d6b8c62a",
				"method": "POST"
			},
			{
				"id": "108225d1-73a8-4a96-90e5-ba5567a10596",
				"method": "POST"
			},
			{
				"id": "f528b0c1-9d72-46de-968d-542af994c8e5",
				"method": "POST"
			},
			{
				"id": "05ec818a-15c3-4ec0-858a-141da3454b8e",
				"method": "POST"
			},
			{
				"id": "39a0028c-a241-4754-b91e-3648139dcfd8",
				"method": "POST"
			},
			{
				"id": "9f3304d8-bddc-4185-affe-05ba3ac8e818",
				"method": "PATCH"
			},
			{
				"id": "1d1e91e4-a503-4bf5-a6c7-efd3f0bb114c",
				"method": "PATCH"
			},
			{
				"id": "096b9b44-5813-4961-8fb5-2b5e6d8a7ced",
				"method": "PATCH"
			},
			{
				"id": "2baa137a-2eae-4ebe-9eb7-c45d86a5212e",
				"method": "PATCH"
			},
			{
				"id": "70df4a22-d4cd-4558-a0c8-3e71fe275bcd",
				"method": "PATCH"
			},
			{
				"id": "7328e6eb-fa0f-4f09-ac23-607003d92365",
				"method": "PATCH"
			},
			{
				"id": "554b0764-a7eb-426f-b0c7-301ad2b2be64",
				"method": "PATCH"
			},
			{
				"id": "a1402ebf-2389-4dd7-be62-61ddeb153fdb",
				"method": "PATCH"
			},
			{
				"id": "c042ccab-d56e-4afa-896f-7a108658803d",
				"method": "PATCH"
			},
			{
				"id": "2d5e80b7-3955-4d82-a0a5-8af6fd8f32ae",
				"method": "PATCH"
			},
			{
				"id": "598089da-815d-4c0d-914f-7635056390a6",
				"method": "PATCH"
			},
			{
				"id": "c5daea63-ab5c-4870-8145-2108769c1940",
				"method": "PATCH"
			},
			{
				"id": "8bff130e-4c17-4d45-af9b-7acaa0542823",
				"method": "PATCH"
			},
			{
				"id": "fe1a2067-b09a-486e-9b20-59edfc74fdc6",
				"method": "PATCH"
			},
			{
				"id": "25330d8e-82e8-4134-9cf1-66d657131d00",
				"method": "PATCH"
			},
			{
				"id": "f54046f2-0a9b-4b52-a6cf-33a6afe1200d",
				"method": "PATCH"
			},
			{
				"id": "b27b694f-a074-461c-868e-66afb8390da0",
				"method": "PATCH"
			},
			{
				"id": "356efd9b-bd08-4de6-916d-baf2376482b4",
				"method": "PATCH"
			},
			{
				"id": "9efc960a-7a69-4447-a29f-12913e82ea48",
				"method": "POST"
			},
			{
				"id": "f1e5eeec-a70f-4303-94bc-b24df5a08736",
				"method": "POST"
			},
			{
				"id": "df1db30a-8ee3-4d71-9e33-713b7a4732f4",
				"method": "GET"
			},
			{
				"id": "8e8b0c31-70a4-4d23-bf5b-fae2389caa03",
				"method": "GET"
			},
			{
				"id": "9fb6bec2-2625-4be4-9d45-f8456c82edcc",
				"method": "GET"
			},
			{
				"id": "5cb4f1ff-258b-4032-8a59-75f4dde1564c",
				"method": "POST"
			},
			{
				"id": "818a02ba-cb9f-4972-a9d0-78afab8e69e5",
				"method": "POST"
			},
			{
				"id": "9b3470b7-ec30-4086-b632-1c70b40aac9b",
				"method": "POST"
			},
			{
				"id": "8f5f9947-5f5a-467d-841a-5d0fa5bd22f4",
				"method": "POST"
			},
			{
				"id": "9f183972-3d4b-4f71-8fbb-962a89bf6b85",
				"method": "POST"
			},
			{
				"id": "fdf4eea1-1893-4292-adc0-b38b2270fb36",
				"method": "GET"
			},
			{
				"id": "3dbd26d0-0b66-492a-96c9-a5d8ff36772d",
				"method": "POST"
			},
			{
				"id": "dc290be5-e4d6-4aec-ae5e-09972f2e4d00",
				"method": "POST"
			},
			{
				"id": "a45ad4b0-b0d5-4803-b250-bfa810f96aa6",
				"method": "POST"
			},
			{
				"id": "b2e838e4-aa51-4417-aebf-5c2b0970154d",
				"method": "POST"
			},
			{
				"id": "73eabe11-503b-486d-b2ef-eeae68a0dd71",
				"method": "POST"
			},
			{
				"id": "36cf1158-78d8-4659-bf2e-a4290cdc1470",
				"method": "POST"
			},
			{
				"id": "f0a0cb90-4b3c-4fe0-863b-b9c4bc9280ff",
				"method": "POST"
			},
			{
				"id": "f26b114d-4b4d-4427-af3f-809f891df33d",
				"method": "GET"
			},
			{
				"id": "a1b98ae7-9a81-4b1b-bc6c-83a7942fc79c",
				"method": "GET"
			},
			{
				"id": "18ce96fe-e644-48e0-a2a7-53f20b5d158d",
				"method": "GET"
			},
			{
				"id": "eede021a-de0f-4c0f-ab7e-5134ab310403",
				"method": "GET"
			},
			{
				"id": "356840e0-14d0-4658-aacb-7691f807d6e8",
				"method": "GET"
			},
			{
				"id": "13abf893-63fb-4f89-94a8-edcb49943126",
				"method": "DELETE"
			},
			{
				"id": "64de3f55-57be-4e73-b94c-3eef769946fb",
				"method": "DELETE"
			},
			{
				"id": "bb6b6470-8b31-444d-b8fe-b37c3917f230",
				"method": "DELETE"
			},
			{
				"id": "96045b8c-1d2f-4cfb-8696-14918936a1c0",
				"method": "DELETE"
			},
			{
				"id": "0debc5fa-c762-4b0f-9fc9-8cedb7e0102b",
				"method": "DELETE"
			},
			{
				"id": "e32ff941-b6fa-4d0f-bbdd-775decfff761",
				"method": "DELETE"
			},
			{
				"id": "b2f72371-f573-42d1-895d-85de68e8f9fe",
				"method": "DELETE"
			},
			{
				"id": "4e260747-df06-4760-a8a0-a9010d00316c",
				"method": "DELETE"
			},
			{
				"id": "966ab6e8-a9ab-4395-914a-46cc76aa993c",
				"method": "DELETE"
			},
			{
				"id": "20a5a258-2619-4529-ae6b-c93ec76be466",
				"method": "DELETE"
			},
			{
				"id": "1ba5e5da-bea2-40ab-9fe8-a2d3ce8d2314",
				"method": "DELETE"
			},
			{
				"id": "8c3f27ca-60f9-419d-814d-fdb5b7335f55",
				"method": "DELETE"
			},
			{
				"id": "d52ccf5a-abbc-4a58-b099-3bffcb2543a9",
				"method": "DELETE"
			},
			{
				"id": "0ee9202c-aa81-4b4e-92a2-20cf243db8e8",
				"method": "DELETE"
			},
			{
				"id": "1d471b40-8d95-4912-b4f3-131ac470b604",
				"method": "DELETE"
			},
			{
				"id": "21f7128b-e186-4551-85c3-c8d068f9098d",
				"method": "DELETE"
			},
			{
				"id": "c025e5d1-c587-4173-bd18-3c802efbba8b",
				"method": "DELETE"
			},
			{
				"id": "e4e7286c-ad53-4dbe-b0d9-5fdfcf4cde9d",
				"method": "DELETE"
			},
			{
				"id": "802b911f-aaa1-497c-81a5-5376bfd24cce",
				"method": "DELETE"
			},
			{
				"id": "2ceb55e6-83e6-4a7b-82b2-0ef655ed5aae",
				"method": "DELETE"
			},
			{
				"id": "d026248c-c182-4ea4-b61c-c650dbaf043b",
				"method": "DELETE"
			}
		]
	}
}